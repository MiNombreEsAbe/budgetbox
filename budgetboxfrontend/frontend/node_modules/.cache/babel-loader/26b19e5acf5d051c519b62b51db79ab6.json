{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morenoa2\\\\Desktop\\\\budgetboxapp\\\\budgetboxfrontend\\\\frontend\\\\src\\\\containers\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef, createRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Bar } from 'react-chartjs-2';\nimport Navigation from \"../components/default/Navigation\";\nimport Header from \"../components/default/Header\";\nimport { fetchExpenseReport, fetchLast4MonthsReport } from \"../redux/transactions/operations\";\nimport { updateBudget } from '../redux/users/operations';\nimport { getUser } from \"../redux/users/selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n\n  const dispatch = useDispatch();\n  const selector = useSelector(state => state);\n  const expenseReports = selector[\"transaction\"]['expenseReports'];\n  const last4MonthsReport = selector[\"transaction\"]['last4monthsReport'];\n  const user = getUser(selector);\n  console.log(last4MonthsReport);\n  const labels = ['January', 'February', 'March', 'April', 'May', 'June'];\n  const data = {\n    labels: labels,\n    datasets: [{\n      label: 'My First dataset',\n      backgroundColor: 'rgb(255, 99, 132)',\n      borderColor: 'rgb(255, 99, 132)',\n      data: [0, 10, 5, 2, 20, 30, 45]\n    }]\n  };\n  useEffect(() => {\n    dispatch(fetchExpenseReport());\n    dispatch(fetchLast4MonthsReport());\n  }, []);\n\n  const updateAmountHandler = async () => {\n    dispatch(updateBudget(\"5000\", user.id));\n    dispatch(fetchExpenseReport()); // setOpenModal(false)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboardHolder\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      active: \"dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboardContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"barChart\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            id: \"q-graph\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: last4MonthsReport.map((report, index) => {\n                let income = report.find(i => {\n                  return i.type === \"income\";\n                });\n                let expense = report.find(i => {\n                  return i.type === \"expense\";\n                });\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  ref: chartRefs.current[index],\n                  className: \"qtr\",\n                  id: `q${index + 1}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"row\",\n                    children: report[0].date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"tooltip expense-bar bar\",\n                    style: {\n                      height: (expense ? expense.total_amount : 0) * chartHeight / highestGraphAmount\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"tooltiptext\",\n                      children: `$${expense ? formatTotalAmount(expense.total_amount) : 0}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"tooltip income-bar bar\",\n                    style: {\n                      height: (income ? income.total_amount : 0) * chartHeight / highestGraphAmount\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"tooltiptext\",\n                      children: `$${income ? formatTotalAmount(income.total_amount) : 0}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 45\n                  }, this)]\n                }, `graph-${index}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"I1e6xWLg+kqrhUy4QEVy0hYKLSU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/morenoa2/Desktop/budgetboxapp/budgetboxfrontend/frontend/src/containers/Dashboard.js"],"names":["useState","useEffect","useRef","createRef","useDispatch","useSelector","Bar","Navigation","Header","fetchExpenseReport","fetchLast4MonthsReport","updateBudget","getUser","Dashboard","dispatch","selector","state","expenseReports","last4MonthsReport","user","console","log","labels","data","datasets","label","backgroundColor","borderColor","updateAmountHandler","id","map","report","index","income","find","i","type","expense","chartRefs","current","date","height","total_amount","chartHeight","highestGraphAmount","formatTotalAmount"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef, createRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nimport Navigation from \"../components/default/Navigation\";\r\nimport Header from \"../components/default/Header\";\r\nimport { fetchExpenseReport, fetchLast4MonthsReport } from \"../redux/transactions/operations\";\r\nimport { updateBudget } from '../redux/users/operations';\r\nimport { getUser } from \"../redux/users/selectors\";\r\n\r\nexport default function Dashboard() {\r\n    const dispatch = useDispatch();\r\n\tconst selector = useSelector((state) => state);\r\n\tconst expenseReports = selector[\"transaction\"]['expenseReports'];\r\n\tconst last4MonthsReport = selector[\"transaction\"]['last4monthsReport'];\r\n\tconst user = getUser(selector);\r\n\r\n    console.log(last4MonthsReport)\r\n    const labels = [\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n      ];\r\n    const data = {\r\n        labels: labels,\r\n        datasets: [{\r\n          label: 'My First dataset',\r\n          backgroundColor: 'rgb(255, 99, 132)',\r\n          borderColor: 'rgb(255, 99, 132)',\r\n          data: [0, 10, 5, 2, 20, 30, 45],\r\n        }]\r\n    }\r\n\r\n    useEffect(() => {\r\n\t\tdispatch(fetchExpenseReport());\r\n\t\tdispatch(fetchLast4MonthsReport());\r\n\t}, []);\r\n\r\n    const updateAmountHandler = async () => {\r\n\t\tdispatch(updateBudget(\"5000\", user.id))\r\n\t\tdispatch(fetchExpenseReport());\r\n\t\t// setOpenModal(false)\r\n\t}\r\n\r\n    return (\r\n        <div className='dashboardHolder'>\r\n            <Navigation active=\"dashboard\" />\r\n            <div className=\"dashboard\">\r\n                <Header />\r\n                <div className=\"dashboardContent\">\r\n                    <p className=\"title\">Dashboard</p>\r\n                    <div className=\"barChart\">\r\n                        <table id=\"q-graph\">\r\n                            <tbody>\r\n                                {last4MonthsReport.map((report, index) => {\r\n                                    let income = report.find((i) => {\r\n                                        return i.type === \"income\";\r\n                                    });\r\n                                    let expense = report.find((i) => {\r\n                                        return i.type === \"expense\";\r\n                                    });\r\n                                    return (\r\n                                        <tr\r\n                                            ref={chartRefs.current[index]}\r\n                                            className=\"qtr\"\r\n                                            id={`q${index + 1}`}\r\n                                            key={`graph-${index}`}\r\n                                        >\r\n                                            <th scope=\"row\">{report[0].date}</th>\r\n                                            <td\r\n                                                className=\"tooltip expense-bar bar\"\r\n                                                style={{\r\n                                                    height:\r\n                                                        ((expense ? expense.total_amount : 0) * chartHeight) /\r\n                                                        highestGraphAmount,\r\n                                                }}\r\n                                            >\r\n                                                <span className=\"tooltiptext\">{`$${\r\n                                                    expense ? formatTotalAmount(expense.total_amount) : 0\r\n                                                }`}</span>\r\n                                            </td>\r\n                                            <td\r\n                                                className=\"tooltip income-bar bar\"\r\n                                                style={{\r\n                                                    height:\r\n                                                        ((income ? income.total_amount : 0) * chartHeight) /\r\n                                                        highestGraphAmount,\r\n                                                }}\r\n                                            >\r\n                                                <span className=\"tooltiptext\">{`$${\r\n                                                    income ? formatTotalAmount(income.total_amount) : 0\r\n                                                }`}</span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    {/* <button onClick={updateAmountHandler}>Update</button> */}\r\n                </div>    \r\n            </div>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}