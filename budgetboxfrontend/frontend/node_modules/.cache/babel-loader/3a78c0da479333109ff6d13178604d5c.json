{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morenoa2\\\\Desktop\\\\budgetboxapp\\\\budgetboxfrontend\\\\frontend\\\\src\\\\components\\\\landingPage\\\\SignUpForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useNavigate } from 'react-router';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signUpErrorAction } from \"../../redux/users/actions\";\nimport { signUp } from \"../../redux/users/operations\";\nimport { getUser } from \"../../redux/users/selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUpForm() {\n  _s();\n\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n  const selector = useSelector(state => state);\n  const user = getUser(selector);\n  const errors = getUser(selector).errors;\n  if (user.id) navigate('/dashboard');\n  const initialValues = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password_confirmation: \"\"\n  };\n  const [values, setValues] = useState(initialValues);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async () => {\n    if (values.password !== values.password_confirmation) {\n      dispatch(signUpErrorAction({\n        password: [\"Passwords do not match.\"]\n      }));\n      return;\n    }\n\n    setIsLoading(true);\n    await dispatch(signUp(values));\n    setIsLoading(false);\n    navigate(\"/myaccount\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signUpForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nameInputHolder\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"nameInput\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"nameInput\",\n        type: \"text\",\n        name: \"name\",\n        value: values.name,\n        onChange: handleInput,\n        placeholder: \"Jane Doe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emailInputHolder\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"emailInput\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"emailInput\",\n        type: \"email\",\n        name: \"email\",\n        value: values.email,\n        onChange: handleInput,\n        placeholder: \"email@email.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), errors.email ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-text\",\n        children: errors.email[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"passwordInputHolder\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"passwordInput\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"passwordInput\",\n        type: \"password\",\n        name: \"password\",\n        value: values.password,\n        onChange: handleInput,\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"repasswordInput\",\n        type: \"password\",\n        name: \"password_confirmation\",\n        value: values.password_confirmation,\n        onChange: handleInput,\n        placeholder: \"Re-enter Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), errors.password ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error-text\",\n      children: errors.password[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 32\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mt-2 custom-btn\",\n      type: \"button\",\n      onClick: handleSubmit,\n      children: isLoading ? \"Registering...\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUpForm, \"6iJyrQiNfmLsi1iyjXWd4nOMTnc=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["C:/Users/morenoa2/Desktop/budgetboxapp/budgetboxfrontend/frontend/src/components/landingPage/SignUpForm.js"],"names":["useState","useNavigate","useDispatch","useSelector","signUpErrorAction","signUp","getUser","SignUpForm","navigate","dispatch","selector","state","user","errors","id","initialValues","name","email","password","password_confirmation","values","setValues","isLoading","setIsLoading","handleInput","e","value","target","handleSubmit"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from 'react-router';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signUpErrorAction } from \"../../redux/users/actions\";\r\nimport { signUp } from \"../../redux/users/operations\";\r\nimport { getUser } from \"../../redux/users/selectors\";\r\n\r\nexport default function SignUpForm() {\r\n    let navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\tconst selector = useSelector((state) => state);\r\n    const user = getUser(selector);\r\n\tconst errors = getUser(selector).errors;\r\n\r\n    if (user.id) navigate('/dashboard');\r\n\r\n    const initialValues = {\r\n        name: \"\",\r\n\t\temail: \"\",\r\n\t\tpassword: \"\",\r\n\t\tpassword_confirmation: \"\",\r\n\t};\r\n\r\n    const [values, setValues] = useState(initialValues);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleInput = e => {\r\n        const { name, value } = e.target;\r\n\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        if (values.password !== values.password_confirmation) {\r\n            dispatch(signUpErrorAction({ password: [\"Passwords do not match.\"] }));\r\n\t\t\treturn;\r\n        }\r\n\r\n        setIsLoading(true);\r\n\t\tawait dispatch(signUp(values));\r\n\t\tsetIsLoading(false);\r\n\t\tnavigate(\"/myaccount\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"signUpForm\">\r\n            <div className=\"nameInputHolder\">\r\n                <label htmlFor=\"nameInput\">Name</label>\r\n                <input \r\n                    id=\"nameInput\" \r\n                    type=\"text\" \r\n                    name=\"name\" \r\n                    value={values.name} \r\n                    onChange={handleInput}\r\n                    placeholder=\"Jane Doe\"\r\n                />\r\n            </div>\r\n            <div className=\"emailInputHolder\">\r\n                <label htmlFor=\"emailInput\">Email</label>\r\n                <input \r\n                    id=\"emailInput\" \r\n                    type=\"email\" \r\n                    name=\"email\" \r\n                    value={values.email} \r\n                    onChange={handleInput}\r\n                    placeholder=\"email@email.com\"\r\n                />\r\n                {errors.email ? <span className=\"error-text\">{errors.email[0]}</span> : null}\r\n            </div>\r\n            <div className=\"passwordInputHolder\">\r\n                <label htmlFor=\"passwordInput\">Password</label>\r\n                <input \r\n                    id=\"passwordInput\" \r\n                    type=\"password\" \r\n                    name=\"password\" \r\n                    value={values.password} \r\n                    onChange={handleInput}\r\n                    placeholder=\"Password\"\r\n                />\r\n                <input \r\n                    id=\"repasswordInput\" \r\n                    type=\"password\" \r\n                    name=\"password_confirmation\" \r\n                    value={values.password_confirmation} \r\n                    onChange={handleInput}\r\n                    placeholder=\"Re-enter Password\"\r\n                />\r\n            </div>\r\n            {errors.password ? <span className=\"error-text\">{errors.password[0]}</span> : null}\r\n\t\t\t<button className=\"mt-2 custom-btn\" type=\"button\" onClick={handleSubmit}>\r\n\t\t\t\t{isLoading ? \"Registering...\" : \"Sign Up\"}\r\n\t\t\t</button>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}