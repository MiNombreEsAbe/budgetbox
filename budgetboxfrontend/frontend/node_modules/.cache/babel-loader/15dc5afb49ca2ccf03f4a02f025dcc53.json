{"ast":null,"code":"import { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { applyMiddleware, combineReducers, compose, createStore as reduxCreateStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { CategoriesReducer } from '../category/reducers';\nimport { TransactionReducer } from '../transactions/reducers';\nimport { UserReducer } from '../users/reducers';\nexport default function createStore(history) {\n  return reduxCreateStore(combineReducers({\n    router: connectRouter(history),\n    category: CategoriesReducer,\n    transaction: TransactionReducer,\n    user: UserReducer\n  }), compose(applyMiddleware(routerMiddleware(history), thunk)));\n}","map":{"version":3,"sources":["C:/Users/morenoa2/Desktop/budgetboxapp/budgetboxfrontend/frontend/src/redux/store/store.js"],"names":["connectRouter","routerMiddleware","applyMiddleware","combineReducers","compose","createStore","reduxCreateStore","thunk","CategoriesReducer","TransactionReducer","UserReducer","history","router","category","transaction","user"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,wBAAhD;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,OAA3C,EAAoDC,WAAW,IAAIC,gBAAnE,QAA2F,OAA3F;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,eAAe,SAASL,WAAT,CAAqBM,OAArB,EAA8B;AACzC,SAAOL,gBAAgB,CACnBH,eAAe,CAAC;AACZS,IAAAA,MAAM,EAAEZ,aAAa,CAACW,OAAD,CADT;AAEZE,IAAAA,QAAQ,EAAEL,iBAFE;AAGZM,IAAAA,WAAW,EAAEL,kBAHD;AAIZM,IAAAA,IAAI,EAAEL;AAJM,GAAD,CADI,EAOnBN,OAAO,CACHF,eAAe,CACXD,gBAAgB,CAACU,OAAD,CADL,EAEXJ,KAFW,CADZ,CAPY,CAAvB;AAcH","sourcesContent":["import { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport { applyMiddleware, combineReducers, compose, createStore as reduxCreateStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { CategoriesReducer } from '../category/reducers';\r\nimport { TransactionReducer } from '../transactions/reducers';\r\nimport { UserReducer } from '../users/reducers';\r\n\r\nexport default function createStore(history) {\r\n    return reduxCreateStore(\r\n        combineReducers({\r\n            router: connectRouter(history),\r\n            category: CategoriesReducer,\r\n            transaction: TransactionReducer,\r\n            user: UserReducer\r\n        }),\r\n        compose(\r\n            applyMiddleware(\r\n                routerMiddleware(history),\r\n                thunk\r\n            )\r\n        )\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}