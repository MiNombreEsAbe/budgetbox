{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morenoa2\\\\Desktop\\\\budgetboxapp\\\\budgetboxfrontend\\\\frontend\\\\src\\\\containers\\\\AccountPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUser } from \"../redux/users/selectors\";\nimport { useNavigate } from \"react-router\";\nimport Navigation from \"../components/default/Navigation\";\nimport Header from \"../components/default/Header\";\nimport AddProfilePic from \"../assets/images/add-profile.png\";\nimport { updateProfile } from \"../redux/users/operations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AccountPage() {\n  _s();\n\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n  const selector = useSelector(state => state);\n  const user = getUser(selector);\n  useEffect(() => {\n    if (!user.id) navigate('/login');\n  }, []);\n  const userValues = {\n    id: user.id,\n    name: user.name,\n    email: user.email,\n    password: ''\n  };\n  const [values, setValues] = useState(userValues);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const submitHandler = () => {\n    setIsLoading(true);\n    dispatch(updateProfile(values, userValues.id));\n    navigate('/myaccount');\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"accountPageHolder\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      active: \"account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accountPage\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accountPageContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addProfile\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: AddProfilePic,\n            alt: \"Add Profile Picture icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Add Profile Picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputHolder\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nameInputHolder\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"nameInput\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"nameInput\",\n              type: \"text\",\n              name: \"name\",\n              value: values.name,\n              onChange: handleInput,\n              placeholder: \"Jane Doe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"emailInputHolder\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"emailInput\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"emailInput\",\n              type: \"email\",\n              name: \"email\",\n              value: values.email,\n              onChange: handleInput,\n              placeholder: \"email@email.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitHandler,\n            type: \"button\",\n            children: !isLoading ? 'Submit' : 'Updating...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AccountPage, \"ovEK3+ZdVe7ZyrvNEFmRm+Q7oJg=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = AccountPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountPage\");","map":{"version":3,"sources":["C:/Users/morenoa2/Desktop/budgetboxapp/budgetboxfrontend/frontend/src/containers/AccountPage.js"],"names":["useState","useEffect","useDispatch","useSelector","getUser","useNavigate","Navigation","Header","AddProfilePic","updateProfile","AccountPage","navigate","dispatch","selector","state","user","id","userValues","name","email","password","values","setValues","isLoading","setIsLoading","handleInput","e","value","target","submitHandler"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUser } from \"../redux/users/selectors\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nimport Navigation from \"../components/default/Navigation\";\r\nimport Header from \"../components/default/Header\";\r\nimport AddProfilePic from \"../assets/images/add-profile.png\"\r\nimport { updateProfile } from \"../redux/users/operations\";\r\n\r\nexport default function AccountPage() {\r\n    let navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const selector = useSelector(state => state);\r\n    const user = getUser(selector);\r\n\r\n    useEffect(() => {\r\n        if (!user.id) navigate('/login');\r\n    }, [])\r\n\r\n    const userValues = {\r\n        id: user.id,\r\n        name: user.name,\r\n        email: user.email,\r\n        password: ''\r\n    }\r\n\r\n    const [values, setValues] = useState(userValues);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    const handleInput = e => {\r\n        const { name, value } = e.target;\r\n\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const submitHandler = () => {\r\n        setIsLoading(true);\r\n        dispatch(updateProfile(values, userValues.id));\r\n        navigate('/myaccount');\r\n        setIsLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"accountPageHolder\">\r\n            <Navigation active=\"account\" />\r\n            <div className=\"accountPage\">\r\n                <Header />\r\n                <div className=\"accountPageContent\">\r\n                    <div className=\"addProfile\">\r\n                        <img src={AddProfilePic} alt=\"Add Profile Picture icon\" />    \r\n                        <p>Add Profile Picture</p>\r\n                    </div>\r\n                    <div className=\"inputHolder\">\r\n                        <div className=\"nameInputHolder\">\r\n                            <label htmlFor=\"nameInput\">Name</label>\r\n                            <input \r\n                                id=\"nameInput\" \r\n                                type=\"text\" \r\n                                name=\"name\" \r\n                                value={values.name} \r\n                                onChange={handleInput}\r\n                                placeholder=\"Jane Doe\"\r\n                            />\r\n                        </div>    \r\n                        <div className=\"emailInputHolder\">\r\n                            <label htmlFor=\"emailInput\">Email</label>\r\n                            <input \r\n                                id=\"emailInput\" \r\n                                type=\"email\" \r\n                                name=\"email\" \r\n                                value={values.email} \r\n                                onChange={handleInput}\r\n                                placeholder=\"email@email.com\"\r\n                            />\r\n                        </div>\r\n                        {/* <div className=\"passwordInputHolder\">\r\n                            <label htmlFor=\"passwordInput\">Password</label>\r\n                            <input \r\n                                id=\"passwordInput\" \r\n                                type=\"password\" \r\n                                name=\"password\" \r\n                                value={values.password} \r\n                                onChange={handleInput}\r\n                                placeholder=\"password\"\r\n                            />\r\n                        </div>   */}\r\n                        <button onClick={submitHandler} type=\"button\">\r\n\t\t\t\t\t\t\t{!isLoading ? 'Submit' : 'Updating...'}\r\n\t\t\t\t\t\t</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}