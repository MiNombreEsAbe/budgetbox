{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morenoa2\\\\Desktop\\\\budgetboxapp\\\\budgetboxfrontend\\\\frontend\\\\src\\\\components\\\\loginPage\\\\LogInForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useNavigate } from 'react-router';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUser } from \"../../redux/users/selectors\";\nimport { signIn } from \"../../redux/users/operations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginForm() {\n  _s();\n\n  let navigate = useNavigate(); // Used to navigate to other pages\n\n  const dispatch = useDispatch(); // Used for dispatching actions\n\n  const selector = useSelector(state => state);\n  const errors = getUser(selector).errors;\n  const initialValues = {\n    email: '',\n    password: ''\n  };\n  const [values, setValues] = useState(initialValues);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async () => {\n    setIsLoading(true);\n    dispatch(signIn(values));\n    setIsLoading(false);\n    navigate('/dashboard');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginForm\",\n    children: [errors.error ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error-text\",\n      children: errors.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emailInputHolder\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"emailInput\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"emailInput\",\n        type: \"email\",\n        name: \"email\",\n        value: values.email,\n        onChange: handleInput,\n        placeholder: \"email@email.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), errors.email ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-text\",\n        children: errors.email[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"passwordInputHolder\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"passwordInput\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"passwordInput\",\n        type: \"password\",\n        name: \"password\",\n        value: values.password,\n        onChange: handleInput,\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), errors.password ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-text\",\n        children: errors.password[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 36\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mt-2 custom-btn\",\n      type: \"button\",\n      onClick: handleSubmit,\n      children: isLoading ? \"Logging In...\" : \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginForm, \"6iJyrQiNfmLsi1iyjXWd4nOMTnc=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/morenoa2/Desktop/budgetboxapp/budgetboxfrontend/frontend/src/components/loginPage/LogInForm.js"],"names":["useState","useNavigate","useDispatch","useSelector","getUser","signIn","LoginForm","navigate","dispatch","selector","state","errors","initialValues","email","password","values","setValues","isLoading","setIsLoading","handleInput","e","name","value","target","handleSubmit","error"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from 'react-router';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUser } from \"../../redux/users/selectors\";\r\nimport { signIn } from \"../../redux/users/operations\";\r\n\r\nexport default function LoginForm() {\r\n    let navigate = useNavigate(); // Used to navigate to other pages\r\n    const dispatch = useDispatch(); // Used for dispatching actions\r\n    const selector = useSelector(state => state);\r\n    const errors = getUser(selector).errors;\r\n\r\n    const initialValues = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    const [values, setValues] = useState(initialValues);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleInput = e => {\r\n        const { name, value } = e.target;\r\n\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        setIsLoading(true);\r\n        dispatch(signIn(values));\r\n        setIsLoading(false);\r\n        navigate('/dashboard');\r\n    }\r\n\r\n    return (\r\n        <div className='loginForm'>\r\n            {errors.error ? <span className=\"error-text\">{errors.error}</span> : null}\r\n            <div className=\"emailInputHolder\">\r\n                <label htmlFor=\"emailInput\">Email</label>\r\n                <input \r\n                    id=\"emailInput\" \r\n                    type=\"email\" \r\n                    name=\"email\" \r\n                    value={values.email} \r\n                    onChange={handleInput}\r\n                    placeholder=\"email@email.com\"\r\n                />\r\n                {errors.email ? <span className=\"error-text\">{errors.email[0]}</span> : null}\r\n            </div>\r\n            <div className=\"passwordInputHolder\">\r\n                <label htmlFor=\"passwordInput\">Password</label>\r\n                <input \r\n                    id=\"passwordInput\" \r\n                    type=\"password\" \r\n                    name=\"password\" \r\n                    value={values.password} \r\n                    onChange={handleInput}\r\n                    placeholder=\"Password\"\r\n                />\r\n                {errors.password ? <span className=\"error-text\">{errors.password[0]}</span> : null}\r\n            </div> \r\n\t\t\t<button className=\"mt-2 custom-btn\" type=\"button\" onClick={handleSubmit}>\r\n\t\t\t\t{isLoading ? \"Logging In...\" : \"Log In\"}\r\n\t\t\t</button>   \r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}