{"ast":null,"code":"import API from '../../API';\nimport { fetchTransactionsAction, addTransactionAction, updateTransactionAction, deleteTransactionAction, errorTransactionAction, resetErrorTransactionAction, fetchReportTransactionsAction, fetchExpenseReportAction, fetchLast4MonthsReportAction } from './actions';\nconst api = new API();\nexport const fetchTransactions = query => {\n  return async dispatch => {\n    return api.getTransactions(query).then(transactions => {\n      dispatch(fetchTransactionsAction(transactions));\n    });\n  };\n};\nexport const addTransaction = addTransactionBody => {\n  return dispatch => {\n    return api.addTransactions(addTransactionBody).then(transactions => {\n      dispatch(addTransactionAction(transactions));\n    }).catch(errs => {\n      dispatch(errorTransactionAction(errs));\n    });\n  };\n};\nexport const updateTransaction = (updateTransactionBody, id) => {\n  return dispatch => {\n    return api.updateTransactions(updateTransactionBody, id).then(transactions => {\n      dispatch(updateTransactionAction(transactions));\n    }).catch(errs => {\n      dispatch(errorTransactionAction(errs));\n    });\n  };\n};\nexport const deleteTransaction = id => {\n  return dispatch => {\n    return api.deleteTransactions(id).then(transactions => {\n      dispatch(deleteTransactionAction(transactions));\n    }).catch(errs => {\n      dispatch(errorTransactionAction(errs));\n    });\n  };\n};\nexport const fetchReportTransactions = function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return async dispatch => {\n    return api.getReportTransactions(params).then(report => dispatch(fetchReportTransactionsAction(report)));\n  };\n};\nexport const fetchExpenseReport = function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return async dispatch => {\n    return api.getExpenseReport(params).then(report => dispatch(fetchExpenseReportAction(report)));\n  };\n};\nexport const fetchLast4MonthsReport = function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return async dispatch => {\n    return api.getLast4MonthsReport(params).then(report => dispatch(fetchLast4MonthsReportAction(report)));\n  };\n};","map":{"version":3,"sources":["C:/Users/morenoa2/Desktop/budgetboxfrontend/frontend/src/redux/transactions/operations.js"],"names":["API","fetchTransactionsAction","addTransactionAction","updateTransactionAction","deleteTransactionAction","errorTransactionAction","resetErrorTransactionAction","fetchReportTransactionsAction","fetchExpenseReportAction","fetchLast4MonthsReportAction","api","fetchTransactions","query","dispatch","getTransactions","then","transactions","addTransaction","addTransactionBody","addTransactions","catch","errs","updateTransaction","updateTransactionBody","id","updateTransactions","deleteTransaction","deleteTransactions","fetchReportTransactions","params","getReportTransactions","report","fetchExpenseReport","getExpenseReport","fetchLast4MonthsReport","getLast4MonthsReport"],"mappings":"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","sourcesContent":["import API from '../../API';\r\nimport { fetchTransactionsAction, addTransactionAction, updateTransactionAction,\r\n    deleteTransactionAction, errorTransactionAction, resetErrorTransactionAction,\r\n    fetchReportTransactionsAction, fetchExpenseReportAction,\r\n    fetchLast4MonthsReportAction } from './actions';\r\n\r\nconst api = new API();\r\n\r\nexport const fetchTransactions = query => {\r\n  return async dispatch => {\r\n    return api.getTransactions(query).then(transactions => {\r\n      dispatch(fetchTransactionsAction(transactions));\r\n    });\r\n  };\r\n};\r\n\r\nexport const addTransaction = addTransactionBody => {\r\n  return dispatch => {\r\n    return api\r\n      .addTransactions(addTransactionBody)\r\n      .then(transactions => {\r\n        dispatch(addTransactionAction(transactions));\r\n      })\r\n      .catch(errs => {\r\n        dispatch(errorTransactionAction(errs));\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateTransaction = (updateTransactionBody, id) => {\r\n  return dispatch => {\r\n    return api\r\n      .updateTransactions(updateTransactionBody, id)\r\n      .then(transactions => {\r\n        dispatch(updateTransactionAction(transactions));\r\n      })\r\n      .catch(errs => {\r\n        dispatch(errorTransactionAction(errs));\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteTransaction = id => {\r\n  return dispatch => {\r\n    return api\r\n      .deleteTransactions(id)\r\n      .then(transactions => {\r\n        dispatch(deleteTransactionAction(transactions));\r\n      })\r\n      .catch(errs => {\r\n        dispatch(errorTransactionAction(errs));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchReportTransactions = (params = {}) => {\r\n  return async dispatch => {\r\n    return api\r\n      .getReportTransactions(params)\r\n      .then(report => dispatch(fetchReportTransactionsAction(report)));\r\n  };\r\n};\r\n\r\nexport const fetchExpenseReport = (params = {}) => {\r\n  return async dispatch => {\r\n    return api\r\n      .getExpenseReport(params)\r\n      .then(report => dispatch(fetchExpenseReportAction(report)));\r\n  };\r\n};\r\n\r\nexport const fetchLast4MonthsReport = (params = {}) => {\r\n  return async dispatch => {\r\n    return api\r\n      .getLast4MonthsReport(params)\r\n      .then(report => dispatch(fetchLast4MonthsReportAction(report)));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}